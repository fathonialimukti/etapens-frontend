import{a as b,p as V}from"./endpoint.aea53914.js";import{_ as f,u as v,c as x,w as n,e as t,o as _,a as l,b as w}from"./index.23a29a87.js";const q=v(),h={data(){return{error:null,isValid:null,database:{type:null,name:null,username:null,password:null,description:null,studentId:q.user.studentAccount.id},dbList:["postgresql","mysql"],checkbox:!1}},methods:{async validate(){const{valid:o}=await this.$refs.form.validate();if(o)this.submit();else return},async submit(){console.log(this.database),await b.post(V+"student/database",this.database).catch(o=>{this.error=o.message}),!this.error&&this.$router.push({name:"Student Dashboard"})}}};function k(o,s,y,D,a,u){const r=t("v-text-field"),d=t("v-textarea"),i=t("v-select"),m=t("v-checkbox"),p=t("v-btn"),c=t("v-form");return _(),x(c,{ref:"form",modelValue:a.isValid,"onUpdate:modelValue":s[6]||(s[6]=e=>a.isValid=e),"lazy-validation":""},{default:n(()=>[l(r,{modelValue:a.database.name,"onUpdate:modelValue":s[0]||(s[0]=e=>a.database.name=e),label:"Database Name",required:"",rules:[e=>!!e||"Name is required",e=>(e||"").indexOf(" ")<0||"No spaces are allowed"]},null,8,["modelValue","rules"]),l(r,{modelValue:a.database.username,"onUpdate:modelValue":s[1]||(s[1]=e=>a.database.username=e),label:"Database user name",required:"",rules:[e=>!!e||"Name is required",e=>(e||"").indexOf(" ")<0||"No spaces are allowed"]},null,8,["modelValue","rules"]),l(r,{modelValue:a.database.password,"onUpdate:modelValue":s[2]||(s[2]=e=>a.database.password=e),label:"Database user password",required:"",rules:[e=>e.match(/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\s).{8,15}$/)||"a password between 8 to 15 characters which contain at least one lowercase letter, one uppercase letter, one numeric digit, and one special"]},null,8,["modelValue","rules"]),l(d,{modelValue:a.database.description,"onUpdate:modelValue":s[3]||(s[3]=e=>a.database.description=e),label:"Description",required:"",rules:[e=>!!e||"Description is required"]},null,8,["modelValue","rules"]),l(i,{modelValue:a.database.type,"onUpdate:modelValue":s[4]||(s[4]=e=>a.database.type=e),items:a.dbList,rules:[e=>!!e||"Database type is required"],label:"Database type",required:""},null,8,["modelValue","items","rules"]),l(m,{modelValue:a.checkbox,"onUpdate:modelValue":s[5]||(s[5]=e=>a.checkbox=e),rules:[e=>!!e||"You must agree to continue!"],label:"Apakah data sudah benar?",required:""},null,8,["modelValue","rules"]),l(p,{color:"success",class:"mr-4",onClick:u.validate},{default:n(()=>[w(" Submit ")]),_:1},8,["onClick"])]),_:1},8,["modelValue"])}const g=f(h,[["render",k]]);export{g as default};
